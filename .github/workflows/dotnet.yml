# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies for Server.Test
      run: dotnet restore Server.Test
    - name: Restore dependencies for Client.Test
      run: dotnet restore Client.Test
    - name: Restore dependencies for server
      run: dotnet restore ChatApp/server
    - name: Restore dependencies for client
      run: dotnet restore ChatApp/client
    - name: Build server
      run: dotnet build --no-restore ChatApp/server
    - name: Build client
      run: dotnet build --no-restore ChatApp/client
    - name: Build server test
      run: dotnet build --no-restore Server.Test
    - name: Build client test
      run: dotnet build --no-restore Client.Test
    - name: Run server tests
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage Server.Test
    - name: Run client tests 
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage Client.Test

    - name: Code Coverage Generator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Code Coverage Report - XMl
      run: reportgenerator -reports:coverage/**/coverage.cobertura.xml -targetdir:coverlet/reports -reporttypes:"Cobertura"

    - name: Update Coverage Badge
      if: github.ref == format('refs/heads/{0}', github.event.chat-app.main)
      uses: we-cli/coverage-badge-action@main

    - name: Build server
      run: dotnet build ChatApp/server --no-restore -o ChatApp/server/bin

    - name: Upload server build output
      uses: actions/upload-artifact@v2
      with:
        name: server output build
        path: ChatApp/server/bin/

    - name: Upload Artefacts
#      run: mkdir -p $GITHUB_WORKSPACE/coverage/
    
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coverlet/reports

      

      
      
